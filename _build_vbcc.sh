#!/bin/zsh

export VBCC=/opt/vbcc
export PATH=$VBCC/bin:$PATH

export DEV=~/dev/bbedit-workspace-a2560
export PROJECT=$DEV/osf
export BUILD_DIR=$PROJECT/build_vbcc
export VBCC_DIR=$PROJECT/config_vbcc

echo "copying latest headers to VBCC config folder $VBCC_DIR/include/mb/..."

cd $PROJECT

# copy latest version of headers to VBCC
cp lib_sys.h $VBCC_DIR/include/mb/
cp a2560_platform.h $VBCC_DIR/include/mb/
cp theme.h $VBCC_DIR/include/mb/
cp control.h $VBCC_DIR/include/mb/
cp control_template.h $VBCC_DIR/include/mb/
cp font.h $VBCC_DIR/include/mb/
cp window.h $VBCC_DIR/include/mb/
cp general.h $VBCC_DIR/include/mb/
cp text.h $VBCC_DIR/include/mb/
cp bitmap.h $VBCC_DIR/include/mb/
cp list.h $VBCC_DIR/include/mb/
cp event.h $VBCC_DIR/include/mb/
cp mouse.h $VBCC_DIR/include/mb/
cp menu.h $VBCC_DIR/include/mb/

# copy latest version of headers to VBCC for other projects to get to
cp lib_sys.h $VBCC/targets/a2560-micah/include/mb/
cp a2560_platform.h $VBCC/targets/a2560-micah/include/mb/
cp theme.h $VBCC/targets/a2560-micah/include/mb/
cp control.h $VBCC/targets/a2560-micah/include/mb/
cp control_template.h $VBCC/targets/a2560-micah/include/mb/
cp font.h $VBCC/targets/a2560-micah/include/mb/
cp window.h $VBCC/targets/a2560-micah/include/mb/
cp general.h $VBCC/targets/a2560-micah/include/mb/
cp text.h $VBCC/targets/a2560-micah/include/mb/
cp bitmap.h $VBCC/targets/a2560-micah/include/mb/
cp list.h $VBCC/targets/a2560-micah/include/mb/
cp event.h $VBCC/targets/a2560-micah/include/mb/
cp mouse.h $VBCC/targets/a2560-micah/include/mb/
cp menu.h $VBCC/targets/a2560-micah/include/mb/

echo "Compiling PJW's minimal startup..."
vasmm68k_mot -Felf -m68040 -o $VBCC_DIR/minimal_startup.o $VBCC_DIR/minimal_startup.s 

echo "Building a2560_sys library..."

# make SYS as static lib
vc +$VBCC_DIR/a2560-lib-OSf -o a2560_sys.lib lib_sys.c theme.c control_template.c font.c window.c control.c general.c bitmap.c text.c list.c startup.c event.c mouse.c menu.c mcp_code/dev/ps2.c -D_A2560K_ -D_f68_ -DMODEL=MODEL_FOENIX_A2560K > $BUILD_DIR/a2560_sys.map
mv a2560_sys.lib $VBCC_DIR/lib/


# *************
# Build executables that can be loaded into f68 emulator
# s28 generated by vbcc is almost good enough, but the last line tells loader to run from 0x00000, instead of 0x020000. 
# perl is used to adjust the built .s28 file

echo "Building system demo executable..."

# build demo code - SYS from library
vc +$VBCC_DIR/a2560-s28-OSf-test -o $BUILD_DIR/sys_demo.s28 lib_sys_demo.c -D_A2560K_ -D_f68_ > $BUILD_DIR/sys_demo.map

# make demo code - SYS but not from library
# vc +$VBCC_DIR/a2560-s28-OSf -o $BUILD_DIR/sys_demo.s28 lib_sys.c theme.c control_template.c font.c window.c control.c general.c bitmap.c text.c list.c startup.c event.c lib_sys_demo.c mouse.c menu.c -D_A2560K_
perl -i -0777 -pe 's/S804000000FB/S804020000FB/' "$BUILD_DIR/sys_demo.s28"

echo "Building system demo executable..."

# build test code - SYS
vc +$VBCC_DIR/a2560-s28-OSf -o $BUILD_DIR/sys_test.s28 lib_sys_test.c -D_A2560K_ -D_f68_ > $BUILD_DIR/sys_demo.map
perl -i -0777 -pe 's/S804000000FB/S804020000FB/' "$BUILD_DIR/sys_test.s28"

echo "Building font demo executable..."

# build demo code -- FONT
vc +$VBCC_DIR/a2560-s28-OSf -o $BUILD_DIR/font_demo.s28 font_demo.c -D_A2560K_ -D_f68_ > $BUILD_DIR/font_demo.map
perl -i -0777 -pe 's/S804000000FB/S804020000FB/' "$BUILD_DIR/font_demo.s28"

echo "Building font test executable..."

# build test code -- FONT
vc +$VBCC_DIR/a2560-s28-OSf -o $BUILD_DIR/font_test.s28 font_test.c -D_A2560K_ -D_f68_ > $BUILD_DIR/font_test.map
perl -i -0777 -pe 's/S804000000FB/S804020000FB/' "$BUILD_DIR/font_test.s28"

echo "Building general test executable..."

# build test code - GENERAL
vc +$VBCC_DIR/a2560-s28-OSf -o $BUILD_DIR/general_test.s28 general_test.c -D_A2560K_ -D_f68_ > $BUILD_DIR/general_test.map
perl -i -0777 -pe 's/S804000000FB/S804020000FB/' "$BUILD_DIR/general_test.s28"

echo "Building bitmap demo executable..."

# build demo code - BITMAP
vc +$VBCC_DIR/a2560-s28-OSf -o $BUILD_DIR/bitmap_demo.s28 bitmap_demo.c -D_A2560K_ -D_f68_ > $BUILD_DIR/bitmap_demo.map
perl -i -0777 -pe 's/S804000000FB/S804020000FB/' "$BUILD_DIR/bitmap_demo.s28"

echo "Building bitmap test executable..."

# build test code - BITMAP
vc +$VBCC_DIR/a2560-s28-OSf -o $BUILD_DIR/bitmap_test.s28 bitmap_test.c -D_A2560K_ -D_f68_ > $BUILD_DIR/bitmap_test.map
perl -i -0777 -pe 's/S804000000FB/S804020000FB/' "$BUILD_DIR/bitmap_test.s28"

echo "Building text demo executable..."

# build demo code - TEXT
vc +$VBCC_DIR/a2560-s28-OSf -o $BUILD_DIR/text_demo.s28 text_demo.c -D_A2560K_ -D_f68_ > $BUILD_DIR/text_demo.map
perl -i -0777 -pe 's/S804000000FB/S804020000FB/' "$BUILD_DIR/text_demo.s28"

echo "Building text test executable..."

# build test code - TEXT
vc +$VBCC_DIR/a2560-s28-OSf -o $BUILD_DIR/text_test.s28 text_test.c -D_A2560K_ -D_f68_ > $BUILD_DIR/text_test.map
perl -i -0777 -pe 's/S804000000FB/S804020000FB/' "$BUILD_DIR/text_test.s28"

echo "Building window demo executable..."

# build demo code -- WINDOW
vc +$VBCC_DIR/a2560-s28-OSf -o $BUILD_DIR/window_demo.s28 window_demo.c -D_A2560K_ -D_f68_ > $BUILD_DIR/window_demo.map
perl -i -0777 -pe 's/S804000000FB/S804020000FB/' "$BUILD_DIR/window_demo.s28"

echo "Building window test executable..."

# build test code -- WINDOW
vc +$VBCC_DIR/a2560-s28-OSf -o $BUILD_DIR/window_test.s28 window_test.c -D_A2560K_ -D_f68_ > $BUILD_DIR/window_test.map
perl -i -0777 -pe 's/S804000000FB/S804020000FB/' "$BUILD_DIR/window_test.s28"



# renew doxygen docs
#doxygen




echo "\n**************************\nVBCC build script complete\n**************************\n"
